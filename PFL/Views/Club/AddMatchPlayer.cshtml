@model PFL.Models.ViewModels.AddPlayerToMatchViewModel
@{
    Layout = null;
    bool hasCaptain = (bool) ViewBag.HasCaptain;
}


<!-- Core JS files -->
@*<script type="text/javascript" src="/assets/js/plugins/loaders/pace.min.js"></script>*@
@*<script type="text/javascript" src="/assets/js/core/libraries/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/js/core/libraries/bootstrap.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/loaders/blockui.min.js"></script>*@
<!-- /core JS files -->
<!-- Theme JS files -->
@* <script type="text/javascript" src="/assets/js/core/libraries/jquery_ui/interactions.min.js"></script> *@
<script type="text/javascript" src="/assets/js/plugins/forms/selects/select2.min.js"></script>

@*<script type="text/javascript" src="/assets/js/core/app.js"></script>*@
@*<script type="text/javascript" src="/assets/js/pages/form_select2.js"></script>*@
<!-- /theme JS files -->



@using (Html.BeginForm("", "", FormMethod.Post, new { id = "add-match-form", @class= "form-horizontal" }))
{
    <label class="label label-danger col-md-12" style="font-size: 14px;" id="validation-message"></label>

    <br />
    <br />
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label class="control-label col-md-3" for="player">Futbolçu seçimi</label>

        <div class="col-md-9">
            <select class="select-player border-warning" id="PlayerId" name="PlayerId">
                @*<optgroup label="Mountain Time Zone">
                        <option value="AZ">Arizona</option>
                        <option value="CO">Colorado</option>
                        <option value="ID">Idaho</option>
                        <option value="WY">Wyoming</option>
                    </optgroup>
                    <optgroup label="Central Time Zone">
                        <option value="AL">Alabama</option>
                        <option value="IA">Iowa</option>
                        <option value="KS">Kansas</option>
                        <option value="KY">Kentucky</option>
                    </optgroup>*@

                <option value="0">Seçim edin</option>
            </select>
        </div>
    </div>

    if (hasCaptain)
    {
        <div class="form-group">
            <label class="control-label col-md-3" for="captain">Komandanın kopitanı</label>

            <div class="col-md-9">
                <input type="checkbox" id="Captain" name="Captain" value="false" />
            </div>
        </div>
    }
    else
    {
        <input type="hidden" id="Captain" name="Captain" value="false" />
    }


    <input type="hidden" id="MatchId" name="MatchId" value="@ViewBag.MatchId" />
    <input type="hidden" id="MainStaff" name="MainStaff" value="@(ViewBag.MainStaff ? "true" : "false")" />

    <br />
    <br />
    <br />
}

<script>
    $('.select-player').select2({
        dropdownParent: $('#add-match-modal'),
        dropdownCssClass: 'border-primary',
        containerCssClass: 'border-primary text-primary-700',
        ajax: {
            url: "/Player/AllowedPlayerList?matchId=2905",
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    q: params.term, // search term
                    page: params.page
                };
            },
            processResults: function (data, params) {

                // parse the results into the format expected by Select2
                // since we are using custom formatting functions we do not need to
                // alter the remote JSON data, except to indicate that infinite
                // scrolling can be used
                params.page = params.page || 1;

                return {
                    results: data.results,
                    pagination: {
                        more: (params.page * 30) < data.total_count
                    }
                };
            },
            cache: true
        }
    });
</script>
