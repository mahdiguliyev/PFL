@model PFL.Models.ViewModels.ClubViewModel

@{
    ViewBag.Title = "Yeni klub";
    Layout = "~/Views/Shared/_LayoutClub.cshtml";
    string action = ViewBag.Action;
    string baseUrl = ViewBag.BaseUrl;
}

@section before_app_scripts
{
    <script type="text/javascript" src="/ckeditor/ckeditor.js"></script>
}
@section after_app_scripts
{
    @*<script type="text/javascript" src="/assets/js/pages/editor_ckeditor.js"></script>*@
    @*<script>
        $(function () {

            // Full featured editor
            CKEDITOR.replace('Note',
                {
                    height: '400px',
                    extraPlugins: 'forms'
                });
        });
    </script>*@
}

<div class="panel panel-flat">
    <div class="panel-heading">
        <h5 class="panel-title">&nbsp;</h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a href="/Club/Details">Siyahıya qayıt</a></li>
            </ul>
        </div>
    </div>
    <hr />

    <div class="panel-body">
        @*<p class="content-group-lg">Yeni klubun əlavə edilməsi</p>*@

        @using (Html.BeginForm(action, baseUrl, FormMethod.Post,
            new { @class = "form-horizontal", encType = "multipart/form-data" }))
        {
            <fieldset class="content-group">

                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" value="@(Model?.Id??0)" />


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Klubun adı", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LogoUpload, "Klubun loqosu", new { @class = "control-label col-md-2" })
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.LogoUpload, new { @class = "file-input", type = "file", name = "Files", data_show_caption = "false", data_show_upload = "false" })

                        @Html.ValidationMessageFor(model => model.LogoUpload, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictId, "Rayon", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownList("DistrictId", null, new { @class = "form-control select-size-lg", data_placeholder = "Seçim edin" })

                        @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreationYear, "Yaranma tarixi", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.CreationYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreationYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Stadium, "Stadion", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Stadium, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stadium, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StadiumCapacity, "Stadionun tutumu", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.StadiumCapacity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StadiumCapacity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StadiumPhotoUpload, "Stadionun şəkli", new { @class = "control-label col-md-2" })
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.StadiumPhotoUpload, new { @class = "file-input", type = "file", name = "Files", data_show_caption = "false", data_show_upload = "false" })
                        @Html.ValidationMessageFor(model => model.StadiumPhotoUpload, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, "Ünvan", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fax, "Telefon", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WebSite, "Veb sayt", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        <div class="input-group input-group-xlg">
                            <span class="input-group-addon">http://</span>
                            @Html.TextBoxFor(model => model.WebSite, new { @class = "form-control", placeholder = "www.example.com" })
                        </div>
                        @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, "Email", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        <div class="input-group input-group-xlg">
                            <span class="input-group-addon">http://</span>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "www.example.com" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ClubPresident, "Klubun prezidenti", new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ClubPresident, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClubPresident, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*<div class="form-group">
                    @Html.LabelFor(model => model.Note, "Qeyd", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>*@






                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Yadda saxla" class="btn btn-primary col-md-12" />
                    </div>
                </div>

            </fieldset>
        }
    </div>
</div>


<script>

    @{
        string logoJS = "";
        string stadiumPhotoJS = "";

        if (Model != null)
        {
            if (!string.IsNullOrEmpty(Model.LogoUrl))
            {
                logoJS = "initialPreview: \"<img src='" + Model.LogoUrl + "' class='file-preview-image' style='width: 100%; height: 160px;'>\", deleteUrl: \"#\", overwriteInitial: true, maxFileSize: 100,";
            }

            if (!string.IsNullOrEmpty(Model.StadiumPhotoUrl))
            {
                stadiumPhotoJS = "initialPreview: \"<img src='" + Model.StadiumPhotoUrl + "' class='file-preview-image' style='width: 100%; height: 160px;'>\", deleteUrl: \"#\", overwriteInitial: true, maxFileSize: 100,";
            }
        }



    }

    $(document).ready(function() {


        $("#LogoUpload").fileinput({
            browseLabel: 'Seçim edin',
            browseIcon: '<i class="icon-file-plus"></i>',
            uploadIcon: '<i class="icon-file-upload2"></i>',
            removeLabel: 'Ləğv edin',
            removeIcon: '<i class="icon-cross3"></i>',
            layoutTemplates: {
                icon: '<i class="icon-file-check"></i>'
            },
            initialCaption: "Fayl seçilməyib",
            @Html.Raw(logoJS)
        });

        $("#StadiumPhotoUpload").fileinput({
            browseLabel: 'Seçim edin',
            browseIcon: '<i class="icon-file-plus"></i>',
            uploadIcon: '<i class="icon-file-upload2"></i>',
            removeLabel: 'Ləğv edin',
            removeIcon: '<i class="icon-cross3"></i>',
            layoutTemplates: {
                icon: '<i class="icon-file-check"></i>'
            },
            initialCaption: "Fayl seçilməyib",
            @Html.Raw(stadiumPhotoJS)
        });
    });

</script>
