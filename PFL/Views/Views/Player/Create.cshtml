@model PFL.Models.ViewModels.PlayerCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string action = ViewBag.Action;
    string baseUrl = ViewBag.BaseUrl;
}

@section before_app_scripts
{
    <script type="text/javascript" src="/assets/js/plugins/notifications/jgrowl.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/ui/moment/moment.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/daterangepicker.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/anytime.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/picker.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/picker.date.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/picker.time.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/legacy.js"></script>
}

@section after_app_scripts{
    <script type="text/javascript" src="/assets/js/pages/picker_date.js?5"></script>
}

<div class="panel panel-flat">

    @FormHelper.CreateFormHeader("Futbolçu")

    <div class="panel-body">
        <p class="content-group-lg">Yeni futbolçunun əlavə edilməsi</p>

        @using (Html.BeginForm(action, baseUrl, FormMethod.Post,
            new { @class = "form-horizontal", encType = "multipart/form-data" }))
        {
            <fieldset class="content-group">

                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" value="@(Model?.Id??0)" />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, "Ad", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, "Soyad", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FatherName, "Ata adı", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, "Doğum tarixi", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon-calendar5"></i></span>
                            @Html.TextBoxFor(model => model.BirthDate, Model?.BirthDate?.ToString("dd MMM, yyyy"), new { @class = "form-control pickadate-selectors" })
                        </div>

                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CitizenshipId, "Vətəndaşlığı", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("CitizenshipId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CitizenshipId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentClubId, "Cari klubu", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("CurrentClubId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CurrentClubId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsReversePlayer, "Əvəzedici heyət", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.IsReversePlayer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsReversePlayer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromClubName, "Hansı klubdan", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FromClubName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FromClubName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromClubId, "Hansı klubdan", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("FromClubId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FromClubId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContractBeginDate, "Müqavilənin başlama tarixi", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon-calendar5"></i></span>
                            @Html.TextBoxFor(model => model.ContractBeginDate, Model?.ContractBeginDate?.ToString("dd MMM, yyyy"), new {@class = "form-control pickadate-selectors"})
                        </div>
                        @Html.ValidationMessageFor(model => model.ContractBeginDate, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContractEndDate, "Müqavilənin bitmə tarixi", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <dic class="input-group">
                            <span class="input-group-addon"><i class="icon-calendar5"></i></span>
                            @Html.TextBoxFor(model => model.ContractEndDate, Model?.ContractEndDate?.ToString("dd MMM, yyyy"), new {@class = "form-control pickadate-selectors"})
                        </dic>
                        @Html.ValidationMessageFor(model => model.ContractEndDate, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContractTypeId, "Müqavilənin tipi", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("ContractTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ContractTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlayerNumber, "Nömrə", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.PlayerNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PlayerNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PositionTypeId, "Mövqe", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("PositionTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PositionTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhotoUpload, "Şəkil", new { @class = "control-label col-md-2" })
                    <div class="col-lg-3">
                        @Html.TextBoxFor(m => m.PhotoUpload, new { @class = "file-input", type = "file", name = "Files", data_show_caption = "false", data_show_upload = "false" })
                        @Html.ValidationMessageFor(model => model.PhotoUpload, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Yadda saxla" class="btn btn-primary col-md-12" />
                    </div>
                </div>

            </fieldset>
        }
    </div>
</div>