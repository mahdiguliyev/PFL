@model PFL.Entities.EntityModels.Transfer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string action = ViewBag.Action;
    string baseUrl = ViewBag.BaseUrl;
}

@section before_app_scripts
{
    <script type="text/javascript" src="/assets/js/plugins/notifications/jgrowl.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/ui/moment/moment.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/daterangepicker.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/anytime.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/picker.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/picker.date.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/picker.time.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/pickers/pickadate/legacy.js"></script>
}

@section after_app_scripts{
    <script type="text/javascript" src="/assets/js/pages/picker_date.js?5"></script>
}


<div class="panel panel-flat">

    <div class="panel-heading">
        <h5 class="panel-title">Yeni transfer</h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a href="/Players/Transfers?playerId=@ViewBag.PlayerId">Siyahıya qayıt</a></li>
            </ul>
        </div>
        <a class="heading-elements-toggle">
            <i class="icon-more"></i>
        </a><a class="heading-elements-toggle"><i class="icon-more"></i></a>
    </div>

    <div class="panel-body">
        <p class="content-group-lg">Futbolçunun (@(ViewBag.PlayerFullName)) yeni transferi</p>

        @using (Html.BeginForm(action, baseUrl, FormMethod.Post,
            new { @class = "form-horizontal" }))
        {
            <fieldset class="content-group col-md-8 col-md-offset-2">

                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" value="@(Model?.Id??0)" />
                <input type="hidden" name="PlayerId" value="@(ViewBag.PlayerId)" />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                @*<div class="form-group">
                    @Html.LabelFor(model => model.ClubFromId, "Hansı klubdan", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-3">
                        @Html.DropDownList("ClubFromId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClubFromId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ClubFromName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClubFromName, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                
                <div class="form-group">
                    <label class="control-label col-md-3" for="ClubFromId">Hansı klubdan</label>

                    <div class="col-md-3">
                        <select class="border-warning" id="ClubFromId" name="ClubFromId">
                            @if (Model != null && Model.ClubFromId > 0)
                            {
                                <option value="@Model.ClubFromId">@Model.ClubFrom.Name</option>
                            }
                            else
                            {
                                <option></option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ClubFromName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClubFromName, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*<div class="form-group">
                    @Html.LabelFor(model => model.ClubToId, "Hansı kluba", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-3">
                        @Html.DropDownList("ClubToId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ContractTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ClubToName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClubToName, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                
                <div class="form-group">
                    <label class="control-label col-md-3" for="ClubToId">Hansı kluba</label>

                    <div class="col-md-3">
                        <select class="border-warning" id="ClubToId" name="ClubToId">
                            @if (Model != null && Model.ClubToId > 0)
                            {
                                <option value="@Model.ClubToId">@Model.ClubTo.Name</option>
                            }
                            else
                            {
                                <option></option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ClubToName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClubToName, "", new { @class = "text-danger" })
                    </div>
                </div>
                


                <div class="form-group">
                    @Html.LabelFor(model => model.ContractTypeId, "Oyunçunun statusu", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.DropDownList("ContractTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ContractTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateFrom, "Müqavilənin başlama tarixi", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon-calendar5"></i></span>
                            @Html.TextBoxFor(model => model.DateFrom, Model?.DateFrom?.ToString("dd MMM, yyyy"), new { @class = "form-control pickadate-selectors" })
                        </div>

                        @Html.ValidationMessageFor(model => model.DateFrom, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.DateTo, "Müqavilənin bitmə tarixi", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="icon-calendar5"></i></span>
                            @Html.TextBoxFor(model => model.DateTo, Model?.DateTo?.ToString("dd MMM, yyyy"), new { @class = "form-control pickadate-selectors" })
                        </div>

                        @Html.ValidationMessageFor(model => model.DateTo, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Yadda saxla" class="btn btn-primary col-md-12" />
                    </div>
                </div>

            </fieldset>
        }
    </div>
</div>


@section footer
{
    <script>
        $('#ClubFromId').select2({
            dropdownCssClass: 'border-primary',
            containerCssClass: 'border-primary text-primary-700',
            ajax: {
                url: "/Select2/Clubs",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchText: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            }
        });

        $('#ClubToId').select2({
            dropdownCssClass: 'border-primary',
            containerCssClass: 'border-primary text-primary-700',
            ajax: {
                url: "/Select2/Clubs",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchText: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            }
        });
    </script>
}
