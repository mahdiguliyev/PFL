@model PFL.Models.DTO.MatchPenaltyGoalDto
@{
    Layout = null;
}

@*<script type="text/javascript" src="/assets/js/plugins/forms/selects/select2.min.js"></script>*@


@using (Html.BeginForm("", "", FormMethod.Post, new { id = "match-penalty-goal-form", @class = "form-horizontal" }))
{
    <label class="label label-danger col-md-12" style="font-size:12px;" id="validation-message"></label>

    <br />
    <br />
    @Html.AntiForgeryToken()

    if (Model != null)
    {
        <input type="hidden" name="Id" id="Id" value="@(Model.Id)" />
    }


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <input type="hidden" id="MatchId" name="MatchId" value="@ViewBag.MatchId" />

    <div class="form-group">
        <label class="control-label col-md-3" for="ClubId">Klub seçimi</label>

        <div class="col-md-9">
            <select class="select-club border-warning select2-match-club" id="ClubId" name="ClubId">
                @if (Model != null)
                {
                    <option value="@(Model.ClubId)">@(Model.ClubName)</option>
                }
                else
                {
                    <option value="0">Seçim edin</option>
                }
            </select>
        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-md-3" for="PlayerId">Futbolçu seçimi</label>

        <div class="col-md-9">
            <select class="select-player border-warning select2-match-player" id="PlayerId" name="PlayerId">
                @if (Model != null)
                {
                    <option value="@(Model.PlayerId)">@Model.PlayerFirstName @Model.PlayerLastName @Model.PlayerFatherName</option>
                }
                else
                {
                    <option value="0">Seçim edin</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-3" for="GoalType">Qol vəziyyəti</label>

        <div class="col-md-9">
            <select class="select-player border-warning" id="GoalTypeId" name="GoalTypeId">
                @if (Model != null)
                {
                    <option value="@(Model.GoalTypeId)">@(Model.GoalTypeName)</option>
                }
                else
                {
                    <option value="0">Seçim edin</option>
                }
            </select>
        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-md-3" for="PenaltyOrder">Ardıcıllıq</label>
        <div class="col-md-2">
            @Html.EditorFor(model => model.PenaltyOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PenaltyOrder, "", new { @class = "text-danger" })
        </div>
    </div>



    <br />
    <br />
    <br />
}

<script>

    $('.select2-match-club').select2({
        dropdownParent: $('#goal-penalty-modal'),
        dropdownCssClass: 'border-primary',
        containerCssClass: 'border-primary text-primary-700',
        ajax: {
            url: "/Referee/MatchClubs?matchId=" + $("#match-id").val(),
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    searchText: params.term, // search term
                    page: params.page
                };
            },
            processResults: function (data, params) {

                params.page = params.page || 1;

                return {
                    results: data.results,
                    pagination: {
                        more: (params.page * 30) < data.total_count
                    }
                };
            },
            cache: true
        }
    });

    $('.select2-match-club').on('select2:select', function (e) {

        $('.select2-match-player').select2({
            dropdownParent: $('#goal-penalty-modal'),
            dropdownCssClass: 'border-primary',
            containerCssClass: 'border-primary text-primary-700',
            ajax: {
                url: "/Referee/MatchPlayers?matchId=" + $("#match-id").val() + '&clubId=' + $('#ClubId').val() + '&played=True',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchText: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            }
        });
    });

    $('.select2-match-player').select2({
        dropdownParent: $('#goal-penalty-modal'),
        dropdownCssClass: 'border-primary',
        containerCssClass: 'border-primary text-primary-700',
        ajax: {
            url: "/Referee/MatchPlayers?matchId=" + $("#match-id").val() + '&played=True',
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    searchText: params.term, // search term
                    page: params.page
                };
            },
            processResults: function (data, params) {

                params.page = params.page || 1;

                return {
                    results: data.results,
                    pagination: {
                        more: (params.page * 30) < data.total_count
                    }
                };
            },
            cache: true
        }
    });

    $('#GoalTypeId').select2({
        dropdownParent: $('#goal-penalty-modal'),
        dropdownCssClass: 'border-primary',
        containerCssClass: 'border-primary text-primary-700',
        ajax: {
            url: "/Referee/PenaltyGoalTypes",
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    searchText: params.term, // search term
                    page: params.page
                };
            },
            processResults: function (data, params) {

                params.page = params.page || 1;

                return {
                    results: data.results,
                    pagination: {
                        more: (params.page * 30) < data.total_count
                    }
                };
            },
            cache: true
        }
    });
</script>
